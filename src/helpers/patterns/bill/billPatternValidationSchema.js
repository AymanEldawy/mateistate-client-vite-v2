import VALIDATION from "@/helpers/VALIDATIONS"
import { z } from "zod"

export const billPatternDefaultValues = {
  code: "",
  name: "",
  ltnname: "",
  billType: 1,
  note: "",
  currencyId: "",
  barcodeBill: false,
  defaultStoreId: "",
  costCenterId: "",
  materialAccountId: "",
  cashAccountId: "",
  discountAccountId: "",
  extraAccountId: "",
  paymentMethod: 1,
  activePerpetualInventory: false,
  stockAccountId: "",
  calculateSaleCostCenterId: "",
  vatAccountId: "",
  vatPercentage: "",
  useVatAccountFromCustomerCard: false,
  postToStore: false,
  postToStoreAuto: false,
  generateEntries: true,
  autoGenerateEntries: false,
  postGenerateEntriesAuto: false,
  deletingEntryDependingOnMaterials: false,
  possibilityOfChangingMaterialsAccount: false,
  calculateVatAfterDiscountAndExtraValueToTheInvoice: false,
  mergeRepeatedMaterials: false,
  requiredCustomerEntry: false,
  requiredCostCenterEntry: false,
  requiredCategoryEntry: false,
  showAlertOnNavigateOutput: false,
  dontSaveWhenNavigateOutput: false,
  showAveragePriceCheckMessageAfterAddingModifying: false,
  billAffectedThePricingOfMaterials: false,
  pricingOfMaterials: "",
  menu: "",
  tableColor1: "",
  tableColor2: "",
  showReferencesField: false,
  requiredReferenceField: false,
  dontShowExpiredField: "",
  lockBillWhenLoadingReferences: "",
  allowPartialLoad: false,
  // references: "",
}

export const billPatternValidationSchema = () => z.object({
  code: VALIDATION.NON_NEGATIVE_NUMBER,
  name: VALIDATION.NON_EMPTY_STRING,
  ltnname: VALIDATION.OPTIONAL_STRING,
  billType: VALIDATION.NON_NEGATIVE_NUMBER,
  note: VALIDATION.OPTIONAL_STRING,
  currencyId: VALIDATION.OPTIONAL_STRING,
  barcodeBill: VALIDATION.OPTIONAL_BOOLEAN,
  defaultStoreId: VALIDATION.OPTIONAL_STRING,
  costCenterId: VALIDATION.OPTIONAL_STRING,
  materialAccountId: VALIDATION.OPTIONAL_STRING,
  cashAccountId: VALIDATION.OPTIONAL_STRING,
  discountAccountId: VALIDATION.OPTIONAL_STRING,
  extraAccountId: VALIDATION.OPTIONAL_STRING,
  paymentMethod: VALIDATION.NON_NEGATIVE_NUMBER,
  activePerpetualInventory: VALIDATION.OPTIONAL_BOOLEAN,
  stockAccountId: VALIDATION.OPTIONAL_STRING,
  calculateSaleCostCenterId: VALIDATION.OPTIONAL_STRING,
  vatAccountId: VALIDATION.OPTIONAL_STRING,
  vatPercentage: VALIDATION.OPTIONAL_STRING,
  useVatAccountFromCustomerCard: VALIDATION.OPTIONAL_BOOLEAN,
  postToStore: VALIDATION.OPTIONAL_BOOLEAN,
  postToStoreAuto: VALIDATION.OPTIONAL_BOOLEAN,
  generateEntries: true,
  autoGenerateEntries: VALIDATION.OPTIONAL_BOOLEAN,
  postGenerateEntriesAuto: VALIDATION.OPTIONAL_BOOLEAN,
  deletingEntryDependingOnMaterials: VALIDATION.OPTIONAL_BOOLEAN,
  possibilityOfChangingMaterialsAccount: VALIDATION.OPTIONAL_BOOLEAN,
  calculateVatAfterDiscountAndExtraValueToTheInvoice: VALIDATION.OPTIONAL_BOOLEAN,
  mergeRepeatedMaterials: VALIDATION.OPTIONAL_BOOLEAN,
  requiredCustomerEntry: VALIDATION.OPTIONAL_BOOLEAN,
  requiredCostCenterEntry: VALIDATION.OPTIONAL_BOOLEAN,
  requiredCategoryEntry: VALIDATION.OPTIONAL_BOOLEAN,
  showAlertOnNavigateOutput: VALIDATION.OPTIONAL_BOOLEAN,
  dontSaveWhenNavigateOutput: VALIDATION.OPTIONAL_BOOLEAN,
  showAveragePriceCheckMessageAfterAddingModifying: VALIDATION.OPTIONAL_BOOLEAN,
  billAffectedThePricingOfMaterials: VALIDATION.OPTIONAL_BOOLEAN,
  pricingOfMaterials: VALIDATION.OPTIONAL_STRING,
  menu: VALIDATION.OPTIONAL_STRING,
  tableColor1: VALIDATION.OPTIONAL_STRING,
  tableColor2: VALIDATION.OPTIONAL_STRING,
  showReferencesField: VALIDATION.OPTIONAL_BOOLEAN,
  requiredReferenceField: VALIDATION.OPTIONAL_BOOLEAN,
  dontShowExpiredField: VALIDATION.OPTIONAL_STRING,
  lockBillWhenLoadingReferences: VALIDATION.OPTIONAL_STRING,
  allowPartialLoad: VALIDATION.OPTIONAL_BOOLEAN,
  // references: "",
})